#!/usr/bin/env bash

# Stop at first error
set -e

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
DOCKER_TAG="example-algorithm-{{ cookiecutter.phase.slug }}"
OUTPUT_DIR="${SCRIPT_DIR}/test/output"

echo "=+= Cleaning up any earlier output"

if [ -d "$OUTPUT_DIR" ]; then
  # Ensure permissions are setup correctly, else the Docker user cannot write to this location
  rm -rf "${OUTPUT_DIR}/*"
  chmod -f o+rwx "$OUTPUT_DIR"
else
  mkdir --mode=o+rwx "$OUTPUT_DIR"
fi

echo "=+= (Re)build the container"
docker build "$SCRIPT_DIR" --quiet --tag $DOCKER_TAG

echo "=+= Doing a forward pass"
docker run --rm \
    --gpus all \
    --volume "${SCRIPT_DIR}/test/input":/input \
    --volume "${OUTPUT_DIR}":/output \
    $DOCKER_TAG


# Ensure permissions are set correctly on the output, else the system user (you) cannot remove these files
docker run --rm \
    --env HOST_UID=`id --user` \
    --env HOST_GID=`id --group` \
    --volume ${OUTPUT_DIR}:/tmp \
    alpine:latest \
    /bin/sh -c 'chown -R ${HOST_UID}:${HOST_GID} /tmp/'

echo "=+= Wrote results to ${SCRIPT_DIR}/test/output"
